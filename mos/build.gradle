plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.mos'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'
    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'
    //Jackson Annotations for @JsonProperty
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.1'
    // AWS S3 API 라이브러리
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.688'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    //OAuth 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //h2 database
    runtimeOnly 'com.h2database:h2'

    //Pageable 사용을 위한 라이브러리
    implementation 'org.springframework.data:spring-data-commons'
    // jdbc
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    // jdbc session
    implementation 'org.springframework.session:spring-session-jdbc'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}
tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    enabled = false
}
// 자바 소스를 컴파일 할 때 적용할 옵션(Gradle 로 컴파일 할 때)
tasks.withType(JavaCompile).configureEach {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'
}
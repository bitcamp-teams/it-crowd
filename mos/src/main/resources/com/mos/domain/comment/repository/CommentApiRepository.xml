<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mos.domain.comment.repository.CommentApiRepository">

  <!--  studyNo/wikiNo에 따라 전체 반환함(정렬은 js) -->
  <select id="findCommentByWikiNo" parameterType="int" resultType="WikiCommentDto">
    SELECT comment_no, parent_comment_no, content, m.username, wc.created_date, wc.updated_date
		FROM wiki_comment wc
    JOIN member m ON wc.member_no = m.member_no
		WHERE wiki_no = #{wikiNo}
      AND wc.stat != 'W02-104'
  </select>

  <select id="findCommentByStudyNo" parameterType="int" resultType="StudyCommentDto">
    SELECT comment_no, parent_comment_no, content, m.username, sc.created_date, sc.updated_date
		FROM study_comment sc
    JOIN member m ON sc.member_no = m.member_no
		WHERE study_no = #{studyNo}
      AND sc.stat != 'W02-104'
  </select>

  <!-- 저장 -->
  <insert id="saveWikiCommentByWikiNo" parameterType="WikiCommentDto">
    INSERT INTO
      wiki_comment(member_no, wiki_no, content
    <if test="parentCommentNo != null">, parent_comment_no</if>
    )
    VALUE
      (#{memberNo}, #{wikiNo}, #{content}
    <if test="parentCommentNo != null">, #{parentCommentNo}</if>
    )
  </insert>

  <insert id="saveStudyCommentByWikiNo" parameterType="StudyCommentDto">
    INSERT INTO
      study_comment(member_no, study_no, content)
    VALUES
      (#{memberNo}, #{studyNo}, #{content})
  </insert>


  <!-- 삭제하면 상태만 바꿈! -->
  <update id="deleteWikiCommentByCommentNo" parameterType="int">
    UPDATE wiki_comment
    SET stat='W02-104'
    WHERE comment_no=#{commentNo}
  </update>

  <update id="deleteStudyCommentByCommentNo" parameterType="int">
    UPDATE study_comment
    SET stat='S02-102'
    WHERE comment_no=#{commentNo}
  </update>

  <!-- 업데이트하면 내용만 바꿈 -->
  <update id="patchWikiComment" parameterType="WikiCommentDto">
    UPDATE wiki_comment
    SET content=#{content}
    WHERE comment_no=#{commentNo}
  </update>








</mapper>
